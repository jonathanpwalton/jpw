#!/usr/bin/env bash

NAME="jpw"
VERSION="0.0.1"
DESCRIPTION="a simple build-from-source package manager for GNU/Linux"

commands=(
	["help"]="display this help text and exit"
	["install"]="install a package"
	["uninstall"]="uninstall a package"
)

error () {
	echo "error: $1"
	exit 1
}

require_root () {
	if [ "$EUID" -ne 0 ]; then
		error "you cannot use this command unless you are root"
	fi
}

usage () {
	echo "${NAME} ${VERSION}, ${DESCRIPTION}"
	echo "usage: $0 <command>"
	exit 0
}

declare -A installed

write_installed () {
	require_root
	rm -f /var/cache/jpw/.installed
	for pkg in "${!installed[@]}"; do
		echo "${pkg}:${installed[$pkg]}" >> /var/cache/jpw/.installed
	done
}

if [[ -e /var/cache/jpw/.installed ]]; then
	mapfile INSTALLED_LINES < /var/cache/jpw/.installed

	for INSTALLED_LINE in "${INSTALLED_LINES[@]}"; do
		IFS=':' read -ra LINE <<< "$INSTALLED_LINE"
		installed[${LINE[0]}]=${LINE[1]}
	done
fi

if [ -z "$1" ]; then
	error "command not supplied, try '$0 help' for more information"
elif [ "$1" = "help" ]; then
	usage
elif [ "$1" = "install" ]; then
	shift
	require_root
	
	while (("$#")); do
		IFS=":" read -ra pkg_ver <<< "$1"

		if [ -z "${pkg_ver[1]}" ]; then
			pkg_ver[1]="latest"
		fi

		tmpdir="$(mktemp)dir"
		mkdir "$tmpdir"
		cd "$tmpdir" || error "failed to cd /tmp"

		if ! wget --no-cache -q --show-progress "https://raw.githubusercontent.com/jonathanpwalton/jpw/refs/heads/main/pkg/${pkg_ver[0]}"; then
			error "no such package '${pkg_ver[0]}'"
		fi

		if [ "${pkg_ver[1]}" == "latest" ]; then
			pkg_ver[1]="$(/usr/bin/env bash "${pkg_ver[0]}" latest)"
		fi
		
		if [ -z "$(/usr/bin/env bash "${pkg_ver[0]}" versions "${pkg_ver[1]}" src)" ]; then
			error "no such version '${pkg_ver[1]}' for '${pkg_ver[0]}'"
		fi

		name=$(/usr/bin/env bash "${pkg_ver[0]}" name)		
		src=$(/usr/bin/env bash "${pkg_ver[0]}" versions "${pkg_ver[1]}" src)
		dst=$(/usr/bin/env bash "${pkg_ver[0]}" versions "${pkg_ver[1]}" dst)
		build=$(/usr/bin/env bash "${pkg_ver[0]}" versions "${pkg_ver[1]}" build)
		tar=""

		pkgdir="/var/cache/jpw/${name}"
		mkdir -p "$pkgdir"
		cd "$pkgdir" || error "failed to cd /${pkgdir}"

		if [[ $src = *.tar.gz ]]; then
			tar="tar xzf"
		else
			error "${src} extraction is not implemented"
		fi

		if [[ $build = "gnu" ]]; then
			echo "
			set -e
			wget -q --show-progress $src
			$tar $(basename "$src")
			rm -f $(basename "$src")
			cd $dst
			./configure
			make
			make install
			make clean
			" > install

			echo "
			set -e
			cd $dst
			make uninstall
			" > uninstall
		else
			error "$build is not implemented"
		fi

		if ! /usr/bin/env bash install; then
			error "failed to install ${name} version ${pkg_ver[1]}"
		fi

		installed[$name]=${pkg_ver[1]}
		write_installed

		shift
	done

else
	error "invalid command '$1', try '$0 help' for more information"
fi

: '
mapfile LINES < /testing
declare -A INSTALLED

for i in "${LINES[@]}"; do
	IFS=':' read -ra LINE <<< $i
	INSTALLED[${LINE[0]}]=${LINE[1]}
done

for i in "${!INSTALLED[@]}"; do
  echo "key  : $i"
  echo "value: ${INSTALLED[$i]}"
done

if [ "${INSTALLED[spell]+1}" == "1" ]; then
	echo "hi"
fi
'